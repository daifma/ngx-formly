(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+9BE":function(n,s){n.exports='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},"/6I6":function(n,s,l){"use strict";l.d(s,"a",function(){return a});var o=l("gIcY"),a=function(){return function(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Input",type:"input",templateOptions:{label:"Input",placeholder:"Placeholder",description:"Description",required:!0}}]}}()},"/7dd":function(n,s){n.exports='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},"/8fU":function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},"/Xq3":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Checkbox',\n      type: 'checkbox',\n      templateOptions: {\n        label: 'Accept terms',\n        description: 'In order to proceed, please accept terms',\n        pattern: 'true',\n        required: true,\n      },\n      validation: {\n        messages: {\n          pattern: 'Please accept the terms',\n        },\n      },\n    },\n  ];\n}\n"},"223+":function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},"3UTs":function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},"713A":function(n,s,l){"use strict";l.d(s,"a",function(){return a});var o=l("gIcY"),a=function(){return function(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Checkbox",type:"checkbox",templateOptions:{label:"Accept terms",description:"In order to proceed, please accept terms",pattern:"true",required:!0},validation:{messages:{pattern:"Please accept the terms"}}}]}}()},"9f/9":function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Checkbox\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'checkbox\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Accept terms\'</span>,\n        description: <span class="hljs-string">\'In order to proceed, please accept terms\'</span>,\n        pattern: <span class="hljs-string">\'true\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n      validation: {\n        messages: {\n          pattern: <span class="hljs-string">\'Please accept the terms\'</span>,\n        },\n      },\n    },\n  ];\n}\n'},"9fAh":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Textarea',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Textarea',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n      },\n    },\n  ];\n}\n"},"9zxC":function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},Ajhc:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},AmNC:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},"CGT/":function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},ERoF:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Select',\n      type: 'select',\n      templateOptions: {\n        label: 'Select',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n        options: [\n          { value: 1, label: 'Option 1'  },\n          { value: 2, label: 'Option 2'  },\n          { value: 3, label: 'Option 3'  },\n          { value: 4, label: 'Option 4'  },\n        ],\n      },\n    },\n  ];\n}\n"},Gs2W:function(n,s,l){"use strict";l.d(s,"a",function(){return d});var o=l("CcnG"),a=l("gIcY"),e=l("Dl9q"),r=l("UcnZ"),p=l("DAbo"),t=l("9Glx"),i=l("ozOA"),m=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],function(n,s,l){var a=!0;return"submit"===s&&(a=!1!==o["\u0275nov"](n,2).onSubmit(l)&&a),"reset"===s&&(a=!1!==o["\u0275nov"](n,2).onReset()&&a),a},null,null)),o["\u0275did"](1,16384,null,0,a["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,a.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),o["\u0275prd"](2048,null,a.ControlContainer,null,[a.FormGroupDirective]),o["\u0275did"](4,16384,null,0,a.NgControlStatusGroup,[[4,a.ControlContainer]],null,null),(n()(),o["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),o["\u0275prd"](512,null,r.a,r.a,[p.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275did"](7,966656,null,0,t.a,[r.a,p.b,[8,null],[2,a.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,o["\u0275nov"](s,4).ngClassUntouched,o["\u0275nov"](s,4).ngClassTouched,o["\u0275nov"](s,4).ngClassPristine,o["\u0275nov"](s,4).ngClassDirty,o["\u0275nov"](s,4).ngClassValid,o["\u0275nov"](s,4).ngClassInvalid,o["\u0275nov"](s,4).ngClassPending)})}function u(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),o["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}var d=o["\u0275ccf"]("formly-app-example",i.a,u,{},{},[])},Kqr1:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},LwRO:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},O9oq:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},SHC3:function(n,s,l){"use strict";l.d(s,"a",function(){return a});var o=l("gIcY"),a=function(){return function(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Textarea",type:"textarea",templateOptions:{label:"Textarea",placeholder:"Placeholder",description:"Description",required:!0}}]}}()},UbvX:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Radio',\n      type: 'radio',\n      templateOptions: {\n        label: 'Radio',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n        options: [\n          { value: 1, label: 'Option 1' },\n          { value: 2, label: 'Option 2' },\n          { value: 3, label: 'Option 3' },\n          { value: 4, label: 'Option 4' },\n        ],\n      },\n    },\n  ];\n}\n"},YuUX:function(n,s){n.exports='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},Z75l:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},ZO0o:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},ZsAZ:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},bsyl:function(n,s){n.exports='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},cHTt:function(n,s){n.exports='<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'},g0ST:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},"hPo+":function(n,s,l){"use strict";l.d(s,"a",function(){return d});var o=l("CcnG"),a=l("gIcY"),e=l("Dl9q"),r=l("UcnZ"),p=l("DAbo"),t=l("9Glx"),i=l("/6I6"),m=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],function(n,s,l){var a=!0;return"submit"===s&&(a=!1!==o["\u0275nov"](n,2).onSubmit(l)&&a),"reset"===s&&(a=!1!==o["\u0275nov"](n,2).onReset()&&a),a},null,null)),o["\u0275did"](1,16384,null,0,a["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,a.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),o["\u0275prd"](2048,null,a.ControlContainer,null,[a.FormGroupDirective]),o["\u0275did"](4,16384,null,0,a.NgControlStatusGroup,[[4,a.ControlContainer]],null,null),(n()(),o["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),o["\u0275prd"](512,null,r.a,r.a,[p.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275did"](7,966656,null,0,t.a,[r.a,p.b,[8,null],[2,a.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,o["\u0275nov"](s,4).ngClassUntouched,o["\u0275nov"](s,4).ngClassTouched,o["\u0275nov"](s,4).ngClassPristine,o["\u0275nov"](s,4).ngClassDirty,o["\u0275nov"](s,4).ngClassValid,o["\u0275nov"](s,4).ngClassInvalid,o["\u0275nov"](s,4).ngClassPending)})}function u(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),o["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}var d=o["\u0275ccf"]("formly-app-example",i.a,u,{},{},[])},i87U:function(n,s,l){"use strict";l.d(s,"a",function(){return d});var o=l("CcnG"),a=l("gIcY"),e=l("Dl9q"),r=l("UcnZ"),p=l("DAbo"),t=l("9Glx"),i=l("tQ4b"),m=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],function(n,s,l){var a=!0;return"submit"===s&&(a=!1!==o["\u0275nov"](n,2).onSubmit(l)&&a),"reset"===s&&(a=!1!==o["\u0275nov"](n,2).onReset()&&a),a},null,null)),o["\u0275did"](1,16384,null,0,a["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,a.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),o["\u0275prd"](2048,null,a.ControlContainer,null,[a.FormGroupDirective]),o["\u0275did"](4,16384,null,0,a.NgControlStatusGroup,[[4,a.ControlContainer]],null,null),(n()(),o["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),o["\u0275prd"](512,null,r.a,r.a,[p.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275did"](7,966656,null,0,t.a,[r.a,p.b,[8,null],[2,a.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,o["\u0275nov"](s,4).ngClassUntouched,o["\u0275nov"](s,4).ngClassTouched,o["\u0275nov"](s,4).ngClassPristine,o["\u0275nov"](s,4).ngClassDirty,o["\u0275nov"](s,4).ngClassValid,o["\u0275nov"](s,4).ngClassInvalid,o["\u0275nov"](s,4).ngClassPending)})}function u(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),o["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}var d=o["\u0275ccf"]("formly-app-example",i.a,u,{},{},[])},iqEK:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},kwDa:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Textarea\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'textarea\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Textarea\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n    },\n  ];\n}\n'},lfq6:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Select\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'select\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Select\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n        options: [\n          { value: <span class="hljs-number">1</span>, label: <span class="hljs-string">\'Option 1\'</span>  },\n          { value: <span class="hljs-number">2</span>, label: <span class="hljs-string">\'Option 2\'</span>  },\n          { value: <span class="hljs-number">3</span>, label: <span class="hljs-string">\'Option 3\'</span>  },\n          { value: <span class="hljs-number">4</span>, label: <span class="hljs-string">\'Option 4\'</span>  },\n        ],\n      },\n    },\n  ];\n}\n'},mAkL:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},"mS+B":function(n,s,l){"use strict";l.d(s,"a",function(){return d});var o=l("CcnG"),a=l("gIcY"),e=l("Dl9q"),r=l("UcnZ"),p=l("DAbo"),t=l("9Glx"),i=l("SHC3"),m=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],function(n,s,l){var a=!0;return"submit"===s&&(a=!1!==o["\u0275nov"](n,2).onSubmit(l)&&a),"reset"===s&&(a=!1!==o["\u0275nov"](n,2).onReset()&&a),a},null,null)),o["\u0275did"](1,16384,null,0,a["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,a.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),o["\u0275prd"](2048,null,a.ControlContainer,null,[a.FormGroupDirective]),o["\u0275did"](4,16384,null,0,a.NgControlStatusGroup,[[4,a.ControlContainer]],null,null),(n()(),o["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),o["\u0275prd"](512,null,r.a,r.a,[p.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275did"](7,966656,null,0,t.a,[r.a,p.b,[8,null],[2,a.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,o["\u0275nov"](s,4).ngClassUntouched,o["\u0275nov"](s,4).ngClassTouched,o["\u0275nov"](s,4).ngClassPristine,o["\u0275nov"](s,4).ngClassDirty,o["\u0275nov"](s,4).ngClassValid,o["\u0275nov"](s,4).ngClassInvalid,o["\u0275nov"](s,4).ngClassPending)})}function u(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),o["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}var d=o["\u0275ccf"]("formly-app-example",i.a,u,{},{},[])},"n+vG":function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},oAXa:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},oAx7:function(n,s,l){"use strict";l.d(s,"a",function(){return d});var o=l("CcnG"),a=l("gIcY"),e=l("Dl9q"),r=l("UcnZ"),p=l("DAbo"),t=l("9Glx"),i=l("713A"),m=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function c(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,7,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"submit"],[null,"reset"]],function(n,s,l){var a=!0;return"submit"===s&&(a=!1!==o["\u0275nov"](n,2).onSubmit(l)&&a),"reset"===s&&(a=!1!==o["\u0275nov"](n,2).onReset()&&a),a},null,null)),o["\u0275did"](1,16384,null,0,a["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,a.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},null),o["\u0275prd"](2048,null,a.ControlContainer,null,[a.FormGroupDirective]),o["\u0275did"](4,16384,null,0,a.NgControlStatusGroup,[[4,a.ControlContainer]],null,null),(n()(),o["\u0275eld"](5,0,null,null,2,"formly-form",[],null,null,null,e.b,e.a)),o["\u0275prd"](512,null,r.a,r.a,[p.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275did"](7,966656,null,0,t.a,[r.a,p.b,[8,null],[2,a.FormGroupDirective]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null)],function(n,s){var l=s.component;n(s,2,0,l.form),n(s,7,0,l.form,l.model,l.fields,l.options)},function(n,s){n(s,0,0,o["\u0275nov"](s,4).ngClassUntouched,o["\u0275nov"](s,4).ngClassTouched,o["\u0275nov"](s,4).ngClassPristine,o["\u0275nov"](s,4).ngClassDirty,o["\u0275nov"](s,4).ngClassValid,o["\u0275nov"](s,4).ngClassInvalid,o["\u0275nov"](s,4).ngClassPending)})}function u(n){return o["\u0275vid"](0,[(n()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,c,m)),o["\u0275did"](1,49152,null,0,i.a,[],null,null)],null,null)}var d=o["\u0275ccf"]("formly-app-example",i.a,u,{},{},[])},oIDR:function(n,s,l){"use strict";l("oAXa");var o={title:"Input type",component:l("/6I6").a,debug:!0,files:[{file:"app.component.html",content:l("/8fU"),filecontent:l("cHTt")},{file:"app.component.ts",content:l("slJH"),filecontent:l("xPdi")},{file:"app.module.ts",content:l("tCDX"),filecontent:l("ZsAZ")}]},a=l("SHC3"),e=(l("ZO0o"),{title:"Textarea type",component:a.a,debug:!0,files:[{file:"app.component.html",content:l("9zxC"),filecontent:l("/7dd")},{file:"app.component.ts",content:l("kwDa"),filecontent:l("9fAh")},{file:"app.module.ts",content:l("O9oq"),filecontent:l("LwRO")}]}),r={title:"Checkbox type",component:(l("g0ST"),l("713A")).a,debug:!0,files:[{file:"app.component.html",content:l("Z75l"),filecontent:l("YuUX")},{file:"app.component.ts",content:l("9f/9"),filecontent:l("/Xq3")},{file:"app.module.ts",content:l("mAkL"),filecontent:l("iqEK")}]},p={title:"Radio type",component:(l("Kqr1"),l("tQ4b")).a,debug:!0,files:[{file:"app.component.html",content:l("n+vG"),filecontent:l("bsyl")},{file:"app.component.ts",content:l("tbCe"),filecontent:l("UbvX")},{file:"app.module.ts",content:l("CGT/"),filecontent:l("3UTs")}]},t={title:"Select type",component:(l("vrmE"),l("ozOA")).a,debug:!0,files:[{file:"app.component.html",content:l("AmNC"),filecontent:l("+9BE")},{file:"app.component.ts",content:l("lfq6"),filecontent:l("ERoF")},{file:"app.module.ts",content:l("223+"),filecontent:l("Ajhc")}]};l("ovgL"),l.d(s,"a",function(){return i}),l.d(s,"b",function(){return m});var i=[o,e,r,p,t],m=[{key:"templateOptions",fieldGroupClassName:"row",fieldGroup:[{key:"label",type:"input",className:"col-md-6",templateOptions:{label:"label"}},{key:"hideLabel",className:"col-md-6",type:"checkbox",templateOptions:{label:"hideLabel"}},{key:"required",className:"col-md-6",type:"checkbox",templateOptions:{label:"required"}},{key:"hideRequiredMarker",className:"col-md-6",type:"checkbox",templateOptions:{label:"hideRequiredMarker"}},{key:"description",className:"col-md-6",type:"input",templateOptions:{label:"description"}}]}]},ovgL:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},ozOA:function(n,s,l){"use strict";l.d(s,"a",function(){return a});var o=l("gIcY"),a=function(){return function(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Select",type:"select",templateOptions:{label:"Select",placeholder:"Placeholder",description:"Description",required:!0,options:[{value:1,label:"Option 1"},{value:2,label:"Option 2"},{value:3,label:"Option 3"},{value:4,label:"Option 4"}]}}]}}()},slJH:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Input\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Input\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n      },\n    },\n  ];\n}\n'},tCDX:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},tQ4b:function(n,s,l){"use strict";l.d(s,"a",function(){return a});var o=l("gIcY"),a=function(){return function(){this.form=new o.FormGroup({}),this.model={},this.options={},this.fields=[{key:"Radio",type:"radio",templateOptions:{label:"Radio",placeholder:"Placeholder",description:"Description",required:!0,options:[{value:1,label:"Option 1"},{value:2,label:"Option 2"},{value:3,label:"Option 3"},{value:4,label:"Option 4"}]}}]}}()},tbCe:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: <span class="hljs-string">\'Radio\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'radio\'</span>,\n      templateOptions: {\n        label: <span class="hljs-string">\'Radio\'</span>,\n        placeholder: <span class="hljs-string">\'Placeholder\'</span>,\n        description: <span class="hljs-string">\'Description\'</span>,\n        required: <span class="hljs-literal">true</span>,\n        options: [\n          { value: <span class="hljs-number">1</span>, label: <span class="hljs-string">\'Option 1\'</span> },\n          { value: <span class="hljs-number">2</span>, label: <span class="hljs-string">\'Option 2\'</span> },\n          { value: <span class="hljs-number">3</span>, label: <span class="hljs-string">\'Option 3\'</span> },\n          { value: <span class="hljs-number">4</span>, label: <span class="hljs-string">\'Option 4\'</span> },\n        ],\n      },\n    },\n  ];\n}\n'},vrmE:function(n,s,l){"use strict";l.d(s,"a",function(){return o});var o=function(){return function(){}}()},xPdi:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'Input',\n      type: 'input',\n      templateOptions: {\n        label: 'Input',\n        placeholder: 'Placeholder',\n        description: 'Description',\n        required: true,\n      },\n    },\n  ];\n}\n"}}]);